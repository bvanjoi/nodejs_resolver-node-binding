/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export class ExternalObject<T> {
  readonly '': {
    readonly '': unique symbol
    [K: symbol]: T
  }
}
export interface Alias {
  key: string
  value?: string
}
export interface RawResolverOptions {
  extensions?: Array<string>
  enforceExtension?: boolean
  alias?: Array<Alias>
  aliasFields?: Array<string>
  conditionNames?: Array<string>
  symlinks?: boolean
  descriptionFile?: string | undefined | null
  mainFiles?: Array<string>
  mainFields?: Array<string>
  modules?: Array<string>
  preferRelative?: boolean
  tsconfigPath?: string
}
export interface ResolverInternal {
  
}
export function create(options: RawResolverOptions): ExternalObject<ResolverInternal>
export function createWithExternalCache(options: RawResolverOptions, external_cache: ExternalObject<ResolverCacheInternal>): ExternalObject<ResolverInternal>
export interface ResolverCacheInternal {
  
}
export function createExternalCache(): ExternalObject<ResolverCacheInternal>
export function resolve(resolver: ExternalObject<ResolverInternal>, base_dir: string, id: string): string
export interface SideEffectsStats {
  boolVal?: boolean
  arrayVal?: Array<string>
  pkgFilePath: string
}
export function loadSideEffects(resolver: ExternalObject<ResolverInternal>, path: string): {boolVal?: boolean, arrayVal?: string[], pkgFilePath: string} | undefined
